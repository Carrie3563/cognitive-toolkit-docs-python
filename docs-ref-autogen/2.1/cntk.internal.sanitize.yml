### YamlMime:UniversalReference
api_name: []
items:
- children:
  - cntk.internal.sanitize.data_type_to_dtype
  - cntk.internal.sanitize.is_string
  - cntk.internal.sanitize.memoize
  - cntk.internal.sanitize.sanitize_Function_attributes
  - cntk.internal.sanitize.sanitize_axis
  - cntk.internal.sanitize.sanitize_axis_list
  - cntk.internal.sanitize.sanitize_batch
  - cntk.internal.sanitize.sanitize_convolution_args
  - cntk.internal.sanitize.sanitize_dtype_cntk
  - cntk.internal.sanitize.sanitize_dtype_numpy
  - cntk.internal.sanitize.sanitize_dynamic_axes
  - cntk.internal.sanitize.sanitize_function
  - cntk.internal.sanitize.sanitize_input
  - cntk.internal.sanitize.sanitize_pooling_args
  - cntk.internal.sanitize.sanitize_precision
  - cntk.internal.sanitize.sanitize_shape
  - cntk.internal.sanitize.sanitize_value
  - cntk.internal.sanitize.sanitize_var_map
  - cntk.internal.sanitize.sanitize_variable_value_dict
  fullName: cntk.internal.sanitize
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize
  source:
    id: sanitize
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 0
  type: module
  uid: cntk.internal.sanitize
- fullName: cntk.internal.sanitize.data_type_to_dtype
  langs:
  - python
  module: cntk.internal.sanitize
  name: data_type_to_dtype
  source:
    id: data_type_to_dtype
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 362
  syntax:
    content: data_type_to_dtype(data_type)
    parameters:
    - id: data_type
  type: function
  uid: cntk.internal.sanitize.data_type_to_dtype
- fullName: cntk.internal.sanitize.is_string
  langs:
  - python
  module: cntk.internal.sanitize
  name: is_string
  source:
    id: is_string
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 15
  summary: 'Tests whether `s` is a string in a way that works on Python 2 and 3.

    '
  syntax:
    content: is_string(s)
    parameters:
    - id: s
  type: function
  uid: cntk.internal.sanitize.is_string
- fullName: cntk.internal.sanitize.memoize
  langs:
  - python
  module: cntk.internal.sanitize
  name: memoize
  source:
    id: memoize
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 497
  syntax:
    content: memoize(func)
    parameters:
    - id: func
  type: function
  uid: cntk.internal.sanitize.memoize
- fullName: cntk.internal.sanitize.sanitize_Function_attributes
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_Function_attributes
  source:
    id: sanitize_Function_attributes
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 486
  syntax:
    content: sanitize_Function_attributes(attributes)
    parameters:
    - id: attributes
  type: function
  uid: cntk.internal.sanitize.sanitize_Function_attributes
- fullName: cntk.internal.sanitize.sanitize_axis
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_axis
  source:
    id: sanitize_axis
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 405
  summary: 'Sanitizes the axis.

    '
  syntax:
    content: sanitize_axis(axis)
    parameters:
    - description: "the axis to be used.\n\n* @cntk.axis.Axis: use axis instance directly\
        \ (will convert row- to col-major in case of static axis). \n\n* int: if positive,\
        \ use it as static axis. If negative, count from last to first axis \n\n*\
        \ None: denote all available axes \n"
      id: axis
      type:
      - "cntk.axis.Axis\n or int or None"
  type: function
  uid: cntk.internal.sanitize.sanitize_axis
- fullName: cntk.internal.sanitize.sanitize_axis_list
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_axis_list
  source:
    id: sanitize_axis_list
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 427
  summary: 'Sanitizes a list of axes.

    '
  syntax:
    content: sanitize_axis_list(axes)
    parameters:
    - description: "the axes to be used.\n\n* @cntk.axis.Axis: use axis instance directly\
        \ (will convert row- to col-major in case of static axis). \n\n* int: if positive,\
        \ use it as static axis. If negative, count from last to first axis \n\n*\
        \ None: denote all available axes \n"
      id: axes
      type:
      - "list of @cntk.axis.Axis\n or int or None"
  type: function
  uid: cntk.internal.sanitize.sanitize_axis_list
- fullName: cntk.internal.sanitize.sanitize_batch
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_batch
  source:
    id: sanitize_batch
    path: bindings/python/cntk\internal\swig_helper.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\swig_helper.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 114
  summary: 'Convert to @cntk.core.Value.

    '
  syntax:
    content: sanitize_batch(var, batch, seq_starts=None, device=None)
    parameters:
    - description: 'input variable into which

        `batch` is passed

        '
      id: var
      type:
      - cntk.variables.Variable
    - description: "batch input for *var*. It can be\n\n* a single NumPy array denoting\
        \ the full minibatch \n\n* a list of NumPy arrays or SciPy sparse CSR matrices\
        \ each representing a sequence \n\n* a @cntk.core.Value object (e.g. returned\
        \ by @cntk.core.Value.one_hot) \n"
      id: batch
    - description: 'if None, every sequence is

        treated as a new sequence. Otherwise, it is interpreted as a list of

        Booleans one for each sequence in the batch that tell whether a

        sequence is a new sequence (*True*) or a continuation of the sequence

        in the same slot of the previous minibatch (*False*)

        '
      id: seq_starts
      type:
      - list of bools or None
    - description: 'device

        this value should be put on

        '
      id: device
      type:
      - 'cntk.device.DeviceDescriptor

        , default None'
    return:
      description: 'batch converted to a @cntk.core.Value instance that can be

        passed to the core API

        '
  type: function
  uid: cntk.internal.sanitize.sanitize_batch
- fullName: cntk.internal.sanitize.sanitize_convolution_args
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_convolution_args
  source:
    id: sanitize_convolution_args
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 477
  syntax:
    content: sanitize_convolution_args(strides, sharing, auto_padding)
    parameters:
    - id: strides
    - id: sharing
    - id: auto_padding
  type: function
  uid: cntk.internal.sanitize.sanitize_convolution_args
- fullName: cntk.internal.sanitize.sanitize_dtype_cntk
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_dtype_cntk
  source:
    id: sanitize_dtype_cntk
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 388
  syntax:
    content: sanitize_dtype_cntk(dtype)
    parameters:
    - id: dtype
  type: function
  uid: cntk.internal.sanitize.sanitize_dtype_cntk
- fullName: cntk.internal.sanitize.sanitize_dtype_numpy
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_dtype_numpy
  source:
    id: sanitize_dtype_numpy
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 373
  syntax:
    content: sanitize_dtype_numpy(dtype)
    parameters:
    - id: dtype
  type: function
  uid: cntk.internal.sanitize.sanitize_dtype_numpy
- fullName: cntk.internal.sanitize.sanitize_dynamic_axes
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_dynamic_axes
  source:
    id: sanitize_dynamic_axes
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 447
  syntax:
    content: sanitize_dynamic_axes(axes)
    parameters:
    - id: axes
  type: function
  uid: cntk.internal.sanitize.sanitize_dynamic_axes
- fullName: cntk.internal.sanitize.sanitize_function
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_function
  source:
    id: sanitize_function
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 196
  summary: 'Tries to retrieve a Function from the argument or throws an exception
    if

    that''s not possible.

    '
  syntax:
    content: sanitize_function(arg)
    parameters:
    - id: arg
  type: function
  uid: cntk.internal.sanitize.sanitize_function
- fullName: cntk.internal.sanitize.sanitize_input
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_input
  source:
    id: sanitize_input
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 65
  summary: "Convert to @cntk.variables.Variable so that it can be passed\nas Variable\
    \ to the CNTK operators.\n\n   * If `arg` is a NumPy array and its type is neither\
    \ *np.float32* nor *np.float64*, it sets it to *np.float32*. \n\n   * If `arg`\
    \ is an op, it is assumed that it has only one output, which will be returned.\
    \ \n"
  syntax:
    content: sanitize_input(arg, fallback_dtype=np.float32, reshape=None)
    parameters:
    - description: 'input

        '
      id: arg
      type:
      - 'number, NumPy array, @cntk.variables.Variable

        , or @cntk.ops.functions.Function

        '
    - defaultValue: <class 'numpy.float32'>
      description: 'fallback dtype in case `arg` is a list

        '
      id: fallback_dtype
      type:
      - NumPy dtype
    - defaultValue: None
      id: reshape
    return:
      description: 'Leaves Constant, Parameter, and Variable as is. Returns Constant,
        if

        `arg` is a number or NumPy array. Variable otherwise.

        '
  type: function
  uid: cntk.internal.sanitize.sanitize_input
- fullName: cntk.internal.sanitize.sanitize_pooling_args
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_pooling_args
  source:
    id: sanitize_pooling_args
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 472
  syntax:
    content: sanitize_pooling_args(pooling_window_shape, strides, auto_padding)
    parameters:
    - id: pooling_window_shape
    - id: strides
    - id: auto_padding
  type: function
  uid: cntk.internal.sanitize.sanitize_pooling_args
- fullName: cntk.internal.sanitize.sanitize_precision
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_precision
  source:
    id: sanitize_precision
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 37
  summary: 'Converts precision to NumPy precision

    '
  syntax:
    content: sanitize_precision(precision)
    parameters:
    - description: 'precision, if string

        it can be one of ''float'' ''float32, ''double'', or ''float64''

        '
      id: precision
      type:
      - str or np.float32 or np.float64
    return:
      description: 'NumPy precision

        '
  type: function
  uid: cntk.internal.sanitize.sanitize_precision
- fullName: cntk.internal.sanitize.sanitize_shape
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_shape
  source:
    id: sanitize_shape
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 58
  summary: 'If shape is scalar, it creates a tuple out of it.

    '
  syntax:
    content: sanitize_shape(shape)
    parameters:
    - id: shape
  type: function
  uid: cntk.internal.sanitize.sanitize_shape
- fullName: cntk.internal.sanitize.sanitize_value
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_value
  source:
    id: sanitize_value
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 157
  summary: 'Converts a given `value` to an @cntk.core.NDArrayView object

    that can be passed to the CNTK core.

    '
  syntax:
    content: sanitize_value(shape, value, dtype, device)
    parameters:
    - description: 'shape of the value

        '
      id: shape
      type:
      - tuple
    - description: 'the value to

        be converted

        '
      id: value
      type:
      - None or value that can be cast to NumPy array
    - description: 'data type (np.float32 or np.float64)

        '
      id: dtype
    - description: 'device this value should be put

        on

        '
      id: device
      type:
      - cntk.device.DeviceDescriptor
    return:
      description: '@cntk.core.NDArrayView object representing `value`

        '
  type: function
  uid: cntk.internal.sanitize.sanitize_value
- fullName: cntk.internal.sanitize.sanitize_var_map
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_var_map
  source:
    id: sanitize_var_map
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 215
  summary: 'Sanitizes a dictionary of *Variable* s to input data such that it can
    be

    handed off to the evaluation methods

    (@cntk.ops.functions.Function.forward,

    @cntk.ops.functions.Function.backward,

    @cntk.train.trainer.Trainer.train_minibatch and

    @cntk.train.trainer.Trainer.test_minibatch).

    '
  syntax:
    content: sanitize_var_map(op_arguments, arguments, precision=None, device=None,
      extract_values_from_minibatch_data=True)
    parameters:
    - description: 'arguments of the

        root function. In @cntk.ops.functions.Function.forward pass it

        is typically *op.arguments*, in

        @cntk.ops.functions.Function.backward pass it is *op.outputs*

        '
      id: op_arguments
      type:
      - cntk.ops.functions.Function
    - description: "maps variables to their input data. The interpretation\ndepends\
        \ on the input type:\n\n   * dict: keys are input variable or names, and values\
        \ are the input data. \n\n   * any other type: if node has a unique input,\
        \ arguments is mapped to this input. \n\nFor nodes with more than one input,\
        \ only dict is allowed.\n\nIn both cases, every sample in the data will be\
        \ interpreted\nas a new sequence.\n\nSequences can be marked as continuations\
        \ of the same sequence in\nthe previous minibatch (that is the sequence in\
        \ the same slot).\nThere are two possibilities for this:\n\n   * specifying\
        \ arguments as a *tuple* where the first element is used as arguments and\
        \ the second one will be used as a list of bools, denoting whether a sequence\
        \ is a new one (*True*) or a continuation of the sequence in the same slot\
        \ of the previous minibatch (*False*). This will be applied to all batches.\
        \ \n\n   * specifying arguments as a dictionary of variables to tuples where\
        \ the first element is used as arguments and the second one will be used as\
        \ a list of bools, denoting whether a sequence is a new one (*True*) or a\
        \ continuation of the sequence in the same slot of the previous minibatch\
        \ (*False*). This will be applied to all batches. \n\nData should be either\
        \ NumPy arrays or a\n@cntk.io.MinibatchData instance.\n"
      id: arguments
    - defaultValue: None
      description: 'if string it can be

        one of ''float'' ''float32, ''double'', ''float64'', or None

        '
      id: precision
      type:
      - str or np.float32 or np.float64
    - defaultValue: None
      description: 'device

        this value should be put on

        '
      id: device
      type:
      - 'cntk.device.DeviceDescriptor

        , default None'
    - defaultValue: 'True'
      description: 'specifies if @cntk.io.MinibatchData instances in the arguments

        map are converted to the underlying value (@cntk.core.Value)

        instances (default), or if they should remain intact, as they contain

        additional meta information required by the Trainer (specifically, by

        the @cntk.train.trainer.Trainer.train_minibatch method).

        '
      id: extract_values_from_minibatch_data
      type:
      - bool, defaults to True
    return:
      description: '*dict* that maps variables to sanitized batches

        '
  type: function
  uid: cntk.internal.sanitize.sanitize_var_map
- fullName: cntk.internal.sanitize.sanitize_variable_value_dict
  langs:
  - python
  module: cntk.internal.sanitize
  name: sanitize_variable_value_dict
  source:
    id: sanitize_variable_value_dict
    path: bindings/python/cntk\internal\sanitize.py
    remote:
      branch: release/2.0.rc1
      path: bindings/python/cntk\internal\sanitize.py
      repo: https://github.com/Microsoft/CNTK.git
    startLine: 457
  syntax:
    content: sanitize_variable_value_dict(var_value_dict)
    parameters:
    - id: var_value_dict
  type: function
  uid: cntk.internal.sanitize.sanitize_variable_value_dict
references:
- fullName: cntk.internal.sanitize.data_type_to_dtype
  isExternal: false
  name: data_type_to_dtype
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.data_type_to_dtype
- fullName: cntk.internal.sanitize.is_string
  isExternal: false
  name: is_string
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.is_string
- fullName: cntk.internal.sanitize.memoize
  isExternal: false
  name: memoize
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.memoize
- fullName: cntk.internal.sanitize.sanitize_Function_attributes
  isExternal: false
  name: sanitize_Function_attributes
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_Function_attributes
- fullName: cntk.internal.sanitize.sanitize_axis
  isExternal: false
  name: sanitize_axis
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_axis
- fullName: cntk.internal.sanitize.sanitize_axis_list
  isExternal: false
  name: sanitize_axis_list
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_axis_list
- fullName: cntk.internal.sanitize.sanitize_batch
  isExternal: false
  name: sanitize_batch
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_batch
- fullName: cntk.internal.sanitize.sanitize_convolution_args
  isExternal: false
  name: sanitize_convolution_args
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_convolution_args
- fullName: cntk.internal.sanitize.sanitize_dtype_cntk
  isExternal: false
  name: sanitize_dtype_cntk
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_dtype_cntk
- fullName: cntk.internal.sanitize.sanitize_dtype_numpy
  isExternal: false
  name: sanitize_dtype_numpy
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_dtype_numpy
- fullName: cntk.internal.sanitize.sanitize_dynamic_axes
  isExternal: false
  name: sanitize_dynamic_axes
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_dynamic_axes
- fullName: cntk.internal.sanitize.sanitize_function
  isExternal: false
  name: sanitize_function
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_function
- fullName: cntk.internal.sanitize.sanitize_input
  isExternal: false
  name: sanitize_input
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_input
- fullName: cntk.internal.sanitize.sanitize_pooling_args
  isExternal: false
  name: sanitize_pooling_args
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_pooling_args
- fullName: cntk.internal.sanitize.sanitize_precision
  isExternal: false
  name: sanitize_precision
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_precision
- fullName: cntk.internal.sanitize.sanitize_shape
  isExternal: false
  name: sanitize_shape
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_shape
- fullName: cntk.internal.sanitize.sanitize_value
  isExternal: false
  name: sanitize_value
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_value
- fullName: cntk.internal.sanitize.sanitize_var_map
  isExternal: false
  name: sanitize_var_map
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_var_map
- fullName: cntk.internal.sanitize.sanitize_variable_value_dict
  isExternal: false
  name: sanitize_variable_value_dict
  parent: cntk.internal.sanitize
  uid: cntk.internal.sanitize.sanitize_variable_value_dict
